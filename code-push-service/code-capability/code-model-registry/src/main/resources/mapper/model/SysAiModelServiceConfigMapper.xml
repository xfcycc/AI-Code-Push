<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.github.xfcycc.model.registry.mapper.SysAiModelServiceConfigMapper">
  <resultMap id="BaseResultMap" type="io.github.xfcycc.model.registry.entity.SysAiModelServiceConfig">
    <!--@mbg.generated-->
    <!--@Table code_push.sys_ai_model_service_config-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="service_name" jdbcType="VARCHAR" property="serviceName" />
    <result column="config_key" jdbcType="VARCHAR" property="configKey" />
    <result column="config_value" jdbcType="LONGVARCHAR" property="configValue" />
    <result column="config_type" jdbcType="VARCHAR" property="configType" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, service_name, config_key, config_value, config_type, description, is_deleted, 
    create_time, update_time
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update code_push.sys_ai_model_service_config
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="service_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.serviceName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="config_key = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.configKey,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="config_value = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.configValue,jdbcType=LONGVARCHAR}
        </foreach>
      </trim>
      <trim prefix="config_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.configType,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="description = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.description,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="is_deleted = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.isDeleted,jdbcType=TINYINT}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into code_push.sys_ai_model_service_config
    (service_name, config_key, config_value, config_type, description, is_deleted, create_time, 
      update_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.serviceName,jdbcType=VARCHAR}, #{item.configKey,jdbcType=VARCHAR}, #{item.configValue,jdbcType=LONGVARCHAR}, 
        #{item.configType,jdbcType=VARCHAR}, #{item.description,jdbcType=VARCHAR}, #{item.isDeleted,jdbcType=TINYINT}, 
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
</mapper>